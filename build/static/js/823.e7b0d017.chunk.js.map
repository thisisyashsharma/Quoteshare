{"version":3,"file":"static/js/823.e7b0d017.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","hooks/use-http.js","webpack://react-complete-guide/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","webpack://react-complete-guide/./src/components/comments/Comments.module.css?d88e","webpack://react-complete-guide/./src/components/comments/CommentItem.module.css?204f","components/comments/CommentItem.js","webpack://react-complete-guide/./src/components/comments/CommentsList.module.css?06d6","components/comments/CommentsList.js","webpack://react-complete-guide/./src/components/comments/NewCommentForm.module.css?81c1","components/comments/NewCommentForm.js","components/comments/Comments.js","pages/QuoteDetail.js","lib/api.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import { useReducer, useCallback } from 'react';\n\nconst httpReducer= (state, action)=>{\n  if (action.type === 'SEND') {  return {  data: null,  error: null,  status: 'pending',  };  }\n  if (action.type === 'SUCCESS') {  return {  data: action.responseData,  error: null,  status: 'completed',  };  }\n  if (action.type === 'ERROR') { return { data: null, error: action.errorMessage, status: 'completed', }; }\n  return state;\n}\n\nconst useHttp = (requestFunction, startWithPending = false)=>{\n  const [httpState, dispatch] = useReducer( httpReducer, { status: startWithPending ? 'pending' : null, data: null, error: null });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({ type: 'ERROR', errorMessage: error.message || 'Something went wrong!', });\n      }\n    },\n    [requestFunction]\n  );\n  return { sendRequest, ...httpState };\n}\n\nexport default useHttp;\n","// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__dLjS5\"};","import { Fragment } from \"react/cjs/react.production.min\";\nimport classes from \"./HighlightedQuote.module.css\";\nimport {  RiHandHeartFill } from 'react-icons/ri';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <Fragment>\n      <figure className={classes.quote}>\n        <p>{props.text}</p>\n        <figcaption> - {props.author} <RiHandHeartFill /> </figcaption>\n      </figure>\n  \n    </Fragment>\n  );\n};\n\nexport default HighlightedQuote;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"Comments_comments__Xd-Gs\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CommentItem_item__DcKeJ\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"CommentsList_comments__1Fj19\"};","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"NewCommentForm_form__Zn0tB\",\"loading\":\"NewCommentForm_loading__AbxCp\",\"control\":\"NewCommentForm_control__U7n5R\",\"actions\":\"NewCommentForm_actions__3rkJH\",\"btn\":\"NewCommentForm_btn__eZMXw\"};","import { useEffect, useRef } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, error } = useHttp(addComment);\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, onAddedComment, error]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value;\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n\n    if(enteredText.trim().length === 0){\n      alert(\"Please enter a comment!\")\n    }\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler} autoComplete=\"off\">\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" required ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn--flat\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./Comments.module.css\";\nimport CommentsList from \"./CommentsList\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport { MdRateReview } from \"react-icons/md\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedComments,\n    error,\n  } = useHttp(getAllComments, true);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />{\" \"}\n      </div>\n    );\n  }\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No comments were added yet!</p>;\n  }\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <div className=\"container\">\n          <button className=\"btn--flat\" onClick={startAddCommentHandler}>\n            <span>Add a Comment</span>\n            <MdRateReview />\n          </button>\n        </div>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import React, { useEffect } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\n\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport Comments from \"../components/comments/Comments\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport { RiRefreshLine } from \"react-icons/ri\";\n\nconst QuoteDetail = () => {\n  const match = useRouteMatch();\n  const params = useParams();\n  const { quoteId } = params;\n  // console.log(params , match)                  //both of params , match contains url id, see in the console on their prototype\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  if (!loadedQuote.text) {\n    return <p>No quote found!</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments <RiRefreshLine />\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </React.Fragment>\n  );\n};\n\nexport default QuoteDetail;\n","const FIREBASE_DOMAIN = 'https://s22-auth-default-rtdb.firebaseio.com//quoteApp';\n\n// export const getAllQuotes = async()=> {\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n  if (!response.ok) {throw new Error(data.message || 'Could not fetch quotes.');}\n\n  const transformedQuotes = [];\n  for (const key in data) {  const quoteObj = {  id: key,  ...data[key],  };\n  transformedQuotes.push(quoteObj);\n  }\n return transformedQuotes;\n}\n\n// export const getSingleQuote = async(quoteId)=> {\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) { throw new Error(data.message || 'Could not fetch quote.'); }\n\n  const loadedQuote = { id: quoteId, ...data, };\n  return loadedQuote;\n}\n\nexport const addQuote = async(quoteData) => {\n  // export async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, { method: 'POST', body: JSON.stringify(quoteData), headers: { 'Content-Type': 'application/json', }, });\n  const data = await response.json();\n\n  if (!response.ok) {throw new Error(data.message || 'Could not create quote.');}\n  return null;\n}\n\n// export const addComment = async(requestData)=> {\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${ requestData.quoteId}.json`, {method: 'POST',body: JSON.stringify(requestData.commentData),headers: {'Content-Type': 'application/json',},});\n  const data = await response.json();\n\n  if (!response.ok) { throw new Error(data.message || 'Could not add comment.'); }\n  return { commentId: data.name };\n}\n\nexport const getAllComments = async(quoteId)=> {\n// export async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) { throw new Error(data.message || 'Could not get comments.'); }\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = { id: key, ...data[key], }; \n    transformedComments.push(commentObj);\n  }\n  return transformedComments;\n}\n\n\n\n//you have to think that what actions we are going to do with the database , and  surprise, you know how much actions it came out , its just 5\n// 1. tofetch/get -  Single Quote (one ID),  All Comments(all IDs),  All Quotes(all IDs)\n// 2. toSend  -  Single Quote (one ID),  Single Comment(one ID)\n "],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","httpReducer","state","action","type","data","error","status","responseData","errorMessage","requestFunction","startWithPending","httpState","dispatch","useReducer","sendRequest","useCallback","async","requestData","message","props","Fragment","className","classes","text","author","comments","map","comment","id","commentTextRef","useRef","useHttp","addComment","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","commentData","quoteId","trim","alert","onSubmit","autoComplete","LoadingSpinner","htmlFor","rows","required","ref","isAddingComment","setIsAddingComment","useState","params","useParams","loadedComments","getAllComments","addedCommentHandler","onClick","match","useRouteMatch","loadedQuote","getSingleQuote","path","exact","to","url","FIREBASE_DOMAIN","getAllQuotes","response","fetch","json","ok","Error","transformedQuotes","quoteObj","addQuote","method","body","JSON","stringify","quoteData","headers","commentId","name","transformedComments","commentObj"],"sourceRoot":""}