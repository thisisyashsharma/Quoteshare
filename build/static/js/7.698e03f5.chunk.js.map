{"version":3,"sources":["hooks/use-http.js","lib/api.js","components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"names":["httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","module","exports","QuoteItem","props","to","className","classes","item","text","author","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","pathname","icons","list","map","quote","NoQuotesFound","noquotes","AllQuotes","useEffect","LoadingSpinner","length"],"mappings":"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","file":"static/js/7.698e03f5.chunk.js","sourcesContent":["import { useReducer, useCallback } from 'react';\n\nconst httpReducer= (state, action)=>{\n  if (action.type === 'SEND') {  return {  data: null,  error: null,  status: 'pending',  };  }\n  if (action.type === 'SUCCESS') {  return {  data: action.responseData,  error: null,  status: 'completed',  };  }\n  if (action.type === 'ERROR') { return { data: null, error: action.errorMessage, status: 'completed', }; }\n  return state;\n}\n\nconst useHttp = (requestFunction, startWithPending = false)=>{\n  const [httpState, dispatch] = useReducer( httpReducer, { status: startWithPending ? 'pending' : null, data: null, error: null });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({ type: 'ERROR', errorMessage: error.message || 'Something went wrong!', });\n      }\n    },\n    [requestFunction]\n  );\n  return { sendRequest, ...httpState };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://s22-auth-default-rtdb.firebaseio.com//quoteApp';\n\n// export const getAllQuotes = async()=> {\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n  if (!response.ok) {throw new Error(data.message || 'Could not fetch quotes.');}\n\n  const transformedQuotes = [];\n  for (const key in data) {  const quoteObj = {  id: key,  ...data[key],  };\n  transformedQuotes.push(quoteObj);\n  }\n return transformedQuotes;\n}\n\n// export const getSingleQuote = async(quoteId)=> {\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) { throw new Error(data.message || 'Could not fetch quote.'); }\n\n  const loadedQuote = { id: quoteId, ...data, };\n  return loadedQuote;\n}\n\nexport const addQuote = async(quoteData) => {\n  // export async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, { method: 'POST', body: JSON.stringify(quoteData), headers: { 'Content-Type': 'application/json', }, });\n  const data = await response.json();\n\n  if (!response.ok) {throw new Error(data.message || 'Could not create quote.');}\n  return null;\n}\n\n// export const addComment = async(requestData)=> {\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${ requestData.quoteId}.json`, {method: 'POST',body: JSON.stringify(requestData.commentData),headers: {'Content-Type': 'application/json',},});\n  const data = await response.json();\n\n  if (!response.ok) { throw new Error(data.message || 'Could not add comment.'); }\n  return { commentId: data.name };\n}\n\nexport const getAllComments = async(quoteId)=> {\n// export async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) { throw new Error(data.message || 'Could not get comments.'); }\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = { id: key, ...data[key], }; \n    transformedComments.push(commentObj);\n  }\n  return transformedComments;\n}\n\n\n\n//you have to think that what actions we are going to do with the database , and  surprise, you know how much actions it came out , its just 5\n// 1. tofetch/get -  Single Quote (one ID),  All Comments(all IDs),  All Quotes(all IDs)\n// 2. toSend  -  Single Quote (one ID),  Single Comment(one ID)\n ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__3DtgU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__1TNDW\",\"sorting\":\"QuoteList_sorting__26DZg\",\"icons\":\"QuoteList_icons__22yuR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__2muCT\"};","import { Link } from \"react-router-dom\";\nimport classes from \"./QuoteItem.module.css\";\nimport { FcLike } from \"react-icons/fc\";\nimport { FaUserCircle } from \"react-icons/fa\";\n\nconst QuoteItem = (props) => {\n  return (\n    <Link to={`/quotes/${props.id}`} className=\"bottonLink\">\n      <li className={classes.item}>\n        <figure>\n          <blockquote>\n            <p>{props.text}</p>\n          </blockquote>\n          <FaUserCircle />\n          <figcaption>{props.author}</figcaption>\n        </figure>\n        <div>\n          <FcLike />\n        </div>\n      </li>\n    </Link>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nimport { BsAlignCenter } from \"react-icons/bs\";\nimport { BiGhost } from \"react-icons/bi\";\nimport { SiEquinixmetal } from \"react-icons/si\";\nimport { GiArmoredBoomerang } from \"react-icons/gi\";\nimport { RiAliensFill } from \"react-icons/ri\";\nimport { AiFillRobot } from \"react-icons/ai\";\n\nconst QuoteList = (props) => {\n  const sortQuotes = (quotes, ascending) => {\n    return quotes.sort((quoteA, quoteB) => {\n      if (ascending) {\n        return quoteA.id > quoteB.id ? 1 : -1;\n      } else {\n        return quoteA.id < quoteB.id ? 1 : -1;\n      }\n    });\n  };\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAscending ? \"desc\" : \"asc\"}`,\n    });\n    // history.push(`${location.pathname}?sort=${(isSortingAscending ? 'desc':'asc')}`)            //alternative\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          <span>Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}</span>\n          {isSortingAscending ? (\n            <BsAlignCenter className={classes.icons} />\n          ) : (\n            <BsAlignCenter className={classes.icons} />\n          )}\n        </button>\n\n        <button>\n          <span>Personality</span>\n          <BiGhost className={classes.icons} />\n        </button>\n        <button>\n          <span>Growth</span>\n          <GiArmoredBoomerang className={classes.icons} />\n        </button>\n        <button>\n          <span>Elon Musk</span>\n          <RiAliensFill className={classes.icons} />\n        </button>\n        <button>\n          <span>Artificial Intelligence</span>\n          <AiFillRobot className={classes.icons} />\n        </button>\n        <button>\n          <span>MetaVerse</span>\n          <SiEquinixmetal className={classes.icons} />\n        </button>\n      </div>\n      <hr />\n\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n           Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import QuoteList from \"../components/quotes/QuoteList\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\nimport { useEffect } from \"react\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n\r\n  if (status === \"completed\" && (!loadedQuote || loadedQuote.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n\r\n  return <QuoteList quotes={loadedQuote} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n"],"sourceRoot":""}